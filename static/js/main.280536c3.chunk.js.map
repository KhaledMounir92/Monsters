{"version":3,"sources":["component/Card-List/Card/Card.js","component/Card-List/Card-List.js","component/Search-Box/SearchBox.js","App.js","reportWebVitals.js","index.js"],"names":["props","console","log","this","className","alt","src","id","monster","name","email","Component","CardList","monsters","map","SearchBox","placeholder","HandleChange","type","onChange","App","state","searchField","fetch","then","res","json","users","setState","filteredmonster","filter","toLowerCase","includes","e","target","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6cAGI,SAAOA,GAEH,OADAC,QAAQC,IAAIC,KAAKH,OAEb,sBAAKI,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,KAAKH,MAAMO,GAArC,eACrB,6BAAyBJ,KAAKH,MAAMQ,QAAQC,MAAnCN,KAAKH,MAAMO,IACrB,4BAAIJ,KAAKH,MAAMQ,QAAQE,e,GAPVC,aCCRC,E,4JACjB,SAAOZ,GAEH,OADAC,QAAQC,IAAIC,KAAKH,OAEb,qBAAKI,UAAU,YAAf,SACKD,KAAKH,MAAMa,SAASC,KAAI,SAACN,GAAD,OAErB,aADD,CACE,EAAD,CAAMD,GAAIC,EAAQD,GAAIC,QAASA,a,GAPbG,aCDzBI,G,MAAY,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,YAAYC,EAAkB,EAAlBA,aACnC,OACI,qBAAKb,UAAU,SAAf,SACK,uBAAOc,KAAK,SAASF,YAAaA,EAAaG,SAAUF,QC4BvDG,G,wDA3Bb,aAAc,IAAD,8BACX,gBACGC,MAAM,CACTR,SAAS,GACTS,YAAY,IAJD,E,qDAOf,WAAoB,IAAD,OACjBC,MAAM,8CAA8CC,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UAAQF,MAAK,SAAAG,GAAK,OAAE,EAAKC,SAAS,CAACf,SAASc,S,oBAE5G,WAAU,IAAD,SACsBxB,KAAKkB,MAA3BR,EADA,EACAA,SAASS,EADT,EACSA,YACVO,EAAgBhB,EAASiB,QAAO,SAAAtB,GAAO,OAC3CA,EAAQC,KAAKsB,cAAcC,SAASV,EAAYS,kBAGhD,OADF9B,QAAQC,IAAIC,KAAKkB,OAEX,sBAAKjB,UAAU,MAAf,UACE,gDACA,cAAC,EAAD,CAAWY,YAAY,SAASC,aAAc,SAACgB,GAAD,OAAK,EAAKL,SAAS,CAACN,YAAYW,EAAEC,OAAOC,WACrF,cAAC,EAAD,CAAUtB,SAAUgB,W,GArBjBlB,cCOJyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.280536c3.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport './Card.style.css'\r\nexport default class extends Component {\r\n    render(props) {\r\n        console.log(this.props)\r\n        return (\r\n            <div className=\"card-container\">\r\n                <img alt=\"monster\" src={`https://robohash.org/${this.props.id}?set=set2`}></img>\r\n                 <h2 key={this.props.id}>{this.props.monster.name}</h2>\r\n                <p>{this.props.monster.email}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport './Card-List.styles.css'\r\nimport Card from './Card/Card'\r\nexport default class CardList extends Component {\r\n    render(props) {\r\n        console.log(this.props)\r\n        return (\r\n            <div className=\"card-list\">\r\n                {this.props.monsters.map((monster)=>(\r\n                   // console.log(monster);\r\n                    <Card id={monster.id} monster={monster}></Card>\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport './SearchBox.style.css'\r\nexport const SearchBox = ({placeholder,HandleChange}) => {\r\n    return (\r\n        <div className=\"search\">\r\n             <input type=\"search\" placeholder={placeholder} onChange={HandleChange}></input>\r\n           \r\n        </div>\r\n    )\r\n}\r\n","\nimport React, { Component } from 'react'\nimport CardList from './component/Card-List/Card-List'\nimport { SearchBox } from './component/Search-Box/SearchBox'\nimport './App.css'\n class App extends Component {\n  constructor(){\n    super()\n  this.state={\n    monsters:[],\n    searchField:''\n  }\n  } \ncomponentDidMount(){\n  fetch('https://jsonplaceholder.typicode.com/users').then(res=>res.json()).then(users=>this.setState({monsters:users}))\n}\n    render() {\n      const {monsters,searchField}=this.state\n      const filteredmonster=monsters.filter(monster=>(\n        monster.name.toLowerCase().includes(searchField.toLowerCase())\n      ))\n      console.log(this.state)\n        return (\n            <div className=\"App\">\n              <h1>Monster Rodelx</h1>\n              <SearchBox placeholder=\"Search\" HandleChange={(e)=>this.setState({searchField:e.target.value})}></SearchBox>\n                <CardList monsters={filteredmonster}>\n        \n               </CardList>\n            </div>\n        )\n    }\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}